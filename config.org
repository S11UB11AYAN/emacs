#+TITLE:Configuration for Emacs
#+AUTHOR:Shubhayan Bagchi

* Packages
** Which-Key
#+begin_src emacs-lisp
(use-package which-key
  :ensure t
  :init
  (which-key-mode))
#+end_src
** Org-Bullets
#+begin_src emacs-lisp
  (use-package org-bullets
    :ensure t
    :config
    (add-hook 'org-mode-hook (lambda () (org-bullets-mode))))
#+end_src
** Ido-Verticals
#+begin_src emacs-lisp
  (use-package ido-vertical-mode
    :ensure t
    :init
    (ido-vertical-mode 1))
#+end_src
** Smex
*** same as ido for meta-x
#+begin_src emacs-lisp
  (use-package smex
    :ensure t
    :init (smex-initialize)
    :bind
    ("M-x" . smex))
#+end_src
** avy
*** for jumping to characters using meta-s
#+begin_src emacs-lisp
  (use-package avy
    :ensure t
    :bind
    ("M-s" . avy-goto-char))
#+end_src
** dashboard
#+begin_src emacs-lisp
  (use-package dashboard
    :ensure t
    :init
    (setq initial-buffer-choice 'dashboard-open)
    (setq dashboard-banner-logo-title "Beche Achi Bhaii")
    (setq dashboard-startup-banner "/home/buku/.emacs.d/unnamed.jpg")
    (setq dashboard-center-content nil)
    (setq dashboard-set-heading-icons t)
    (setq dashboard-set-file-icons t)
    (setq dashboard-filter-agenda-entry 'dashboard-no-filter-agenda)
    (setq dashboard-items '((recents . 5)
	  (agenda . 10)
	  (bookmarks . 5)))
    :config
    (dashboard-setup-startup-hook))
#+end_src
** company
*** for auto-completions
#+begin_src emacs-lisp
  (use-package company
    :ensure t
    :init
    (add-hook 'after-init-hook 'global-company-mode))
#+end_src
** spaceline
#+begin_src emacs-lisp
  (use-package spaceline
    :ensure t
    :config
    (require 'spaceline-config)
    (setq powerline-default-separator (quote arrow))
    (spaceline-spacemacs-theme))
#+end_src

* UI changes
#+begin_src emacs-lisp
  (tool-bar-mode -1)
  (menu-bar-mode -1)
  (scroll-bar-mode -1)
  (line-number-mode 1)
  (column-number-mode 1)
#+end_src

* QOL
#+begin_src emacs-lisp
  (setq make-backup-files nil)
  (setq auto-save-default nil)
  (setq scroll-conservatively 100)
  (setq ring-bell-function 'ignore)
  (setq org-agenda-files '("~/check-it/life.org"))
  (setq electric-pair-pairs '(
			      (?\( . ?\))
			      (?\[ . ?\])
			      (?\{ . ?\})
			      (?\" . ?\")
			      (?\' . ?\')
			      ))
  (electric-pair-mode t)


  (global-prettify-symbols-mode t) 
  (global-hl-line-mode t)
  (global-prettify-symbols-mode t) 
  (global-hl-line-mode t)
  (global-set-key (kbd "C-x C-b") 'ibuffer)
  (global-visual-line-mode t)
  #+end_src
** IDO
#+begin_src emacs-lisp
  (setq ido-enable-flex-matching nil)
  (setq ido-create-new-buffer 'always)
  (setq ido-everywhere t)
  (ido-mode 1)
#+end_src
